{"version":3,"sources":["components/svg/GamesUnderline.svg","components/Search.js","components/Home.js","App.js","index.js"],"names":["module","exports","Search","props","state","searchValue","countries","label","value","input","document","getElementById","autocomplete","fetch","text","update","toLowerCase","suggestions","filter","n","startsWith","console","log","tempValue","elemId","caretPos","elem","createTextRange","range","move","select","selectionStart","focus","setSelectionRange","setCaretPosition","length","e","onSelect","item","className","id","type","spellcheck","Component","Home","src","GamesUnderline","alt","App","exact","path","component","withRouter","ReactDOM","render"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,4C,6TC0E5BC,E,kDA/Cb,WAAaC,GAAQ,IAAD,8BACpB,gBACKC,MAAQ,CACZC,YAAa,IAHM,E,gEASlB,IAAIC,EAAY,CACd,CAAEC,MAAO,OAAQC,MAAO,MACxB,CAAED,MAAO,YAAaC,MAAO,MAC7B,CAAED,MAAO,eAAgBC,MAAO,MAChC,CAAED,MAAO,cAAeC,MAAO,OAE7BC,EAAQC,SAASC,eAAe,SACpCC,IAAa,CACXH,MAAOA,EACPI,MAAO,SAASC,EAAMC,GAClBD,EAAOA,EAAKE,cAEZ,IAAIC,EAAcX,EAAUY,QAAO,SAAAC,GAAC,OAAIA,EAAEZ,MAAMS,cAAcI,WAAWN,MACzEC,EAAOE,GACPI,QAAQC,IAAIL,EAAY,IACxB,IACE,IAAIM,EAAYb,SAASC,eAAe,SAASH,MACjDE,SAASC,eAAe,SAASH,MAAQS,EAAY,GAAGV,MAhDpE,SAA0BiB,EAAQC,GAChC,IAAIC,EAAOhB,SAASC,eAAea,GAEnC,GAAW,MAARE,EACC,GAAGA,EAAKC,gBAAiB,CACrB,IAAIC,EAAQF,EAAKC,kBACjBC,EAAMC,KAAK,YAAaJ,GACxBG,EAAME,cAGHJ,EAAKK,gBACJL,EAAKM,QACLN,EAAKO,kBAAkBR,EAAUA,IAGjCC,EAAKM,QAkCPE,CAAiB,QAASX,EAAUY,QACpC,MAAOC,GACPf,QAAQC,IAAI,yBAGlBe,SAAU,SAASC,GACf7B,EAAMD,MAAQ8B,EAAK/B,W,+BAM3B,OACE,yBAAKgC,UAAU,uBACb,2BAAOC,GAAG,QAAQC,KAAK,OAAOC,WAAW,QAAQH,UAAU,sB,GA3C5CI,aCJNC,MAhBf,WACE,OACE,yBAAKL,UAAU,qBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,oBAAb,SAGA,yBAAKM,IAAKC,IAAgBC,IAAI,uBAAuBR,UAAU,4BAEjE,yBAAKA,UAAU,cACb,kBAAC,EAAD,SCQOS,MAjBf,WACE,OACE,yBAAKT,UAAU,OACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,mBACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWC,YAAWR,KAE5C,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,UAAUC,UAAWC,YAAWlD,UCR5DmD,IAASC,OAAO,kBAAC,EAAD,MAAS5C,SAASC,eAAe,W","file":"static/js/main.68da69b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GamesUnderline.e4ec9436.svg\";","import React, { Component }  from 'react';\r\nimport './Search.css';\r\nimport AutosizeInput from 'react-input-autosize';\r\nimport autocomplete from 'autocompleter';\r\n\r\nfunction setCaretPosition(elemId, caretPos) {\r\n  var elem = document.getElementById(elemId);\r\n\r\n  if(elem != null) {\r\n      if(elem.createTextRange) {\r\n          var range = elem.createTextRange();\r\n          range.move('character', caretPos);\r\n          range.select();\r\n      }\r\n      else {\r\n          if(elem.selectionStart) {\r\n              elem.focus();\r\n              elem.setSelectionRange(caretPos, caretPos);\r\n          }\r\n          else\r\n              elem.focus();\r\n      }\r\n  }\r\n}\r\n\r\nclass Search extends Component {\r\n  \r\n  constructor (props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tsearchValue: '',\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount () {\r\n    let countries = [\r\n      { label: 'Pong', value: 'UK' },\r\n      { label: 'Asteroids', value: 'US' },\r\n      { label: 'Asteroidsasd', value: 'US' },\r\n      { label: 'Asteroidsaa', value: 'US' }\r\n    ];\r\n    let input = document.getElementById(\"games\");\r\n    autocomplete({\r\n      input: input,\r\n      fetch: function(text, update) {\r\n          text = text.toLowerCase();\r\n          // you can also use AJAX requests instead of preloaded data\r\n          var suggestions = countries.filter(n => n.label.toLowerCase().startsWith(text))\r\n          update(suggestions);\r\n          console.log(suggestions[0]);\r\n          try {\r\n            var tempValue = document.getElementById(\"games\").value;\r\n            document.getElementById(\"games\").value = suggestions[0].label;\r\n            setCaretPosition(\"games\", tempValue.length);\r\n          } catch (e) {\r\n            console.log(\"No more suggestions\")\r\n          }\r\n      },\r\n      onSelect: function(item) {\r\n          input.value = item.label;\r\n      }\r\n  })\r\n  }\r\n  //<span id=\"caret\" className=\"caret\">|</span>\r\n  render () {\r\n  return (\r\n    <div className=\"search-main-content\">\r\n      <input id=\"games\" type=\"text\" spellcheck=\"false\" className=\"search-input\" />\r\n\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default Search;","import React, { Component }  from 'react';\r\nimport './Home.css';\r\nimport GamesUnderline from \"./svg/GamesUnderline.svg\";\r\nimport Search from './Search';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home-main-content\">\r\n      <div className=\"game-heading\">\r\n        <p className=\"game-heading-txt\">\r\n          Games\r\n        </p>\r\n        <img src={GamesUnderline} alt=\"Games text underline\" className=\"game-heading-underline\"/>\r\n      </div>\r\n      <div className=\"search-bar\">\r\n        <Search/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter, Switch, Route, withRouter  } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Search from \"./components/Search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <div className=\"webpage-content\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={withRouter(Home)}>\r\n          </Route>\r\n          <Route exact path=\"/Search\" component={withRouter(Search)}>\r\n          </Route>\r\n        </Switch>\r\n        </div>\r\n    </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}